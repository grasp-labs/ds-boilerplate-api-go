// Code generated by MockGen. DO NOT EDIT.
// Source: ./models/controller.go

// Package models is a generated GoMock package.
package models

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockController is a mock of Controller interface.
type MockController struct {
	ctrl     *gomock.Controller
	recorder *MockControllerMockRecorder
}

// MockControllerMockRecorder is the mock recorder for MockController.
type MockControllerMockRecorder struct {
	mock *MockController
}

// NewMockController creates a new mock instance.
func NewMockController(ctrl *gomock.Controller) *MockController {
	mock := &MockController{ctrl: ctrl}
	mock.recorder = &MockControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockController) EXPECT() *MockControllerMockRecorder {
	return m.recorder
}

// GetRoutes mocks base method.
func (m *MockController) GetRoutes() Routes {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRoutes")
	ret0, _ := ret[0].(Routes)
	return ret0
}

// GetRoutes indicates an expected call of GetRoutes.
func (mr *MockControllerMockRecorder) GetRoutes() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoutes", reflect.TypeOf((*MockController)(nil).GetRoutes))
}
